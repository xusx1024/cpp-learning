#include<iostream>
using namespace std;
int main()
{
  const int v2 = 0;// 顶层const
  int v1 = v2;
  int *p1 = &v1;
  int &r1 = v1;
  const int *p2 = &v2, *const p3 = &v2 ,&r2 = v2;
  // p2来说,最左侧的const是底层,表示p2指向的对象是常量;对p3来说,最左侧是底层表明指针所指向的对象是常量,紧挨着p3是顶层表明指针是常量
  r1 = r2;//合法  等价于 v1 = v2,也就是把v2的拷贝给v1,v1不是常量可以改变
//  p1 = p2;//不合法  虽然p1是非常量指针,可以被改变,p2有底层const,二者的底层const不匹配.
  /*
如果p1=p2合法了,那么,p1由于是非常量,所以可以通过指针修改指向的对象,
而p2的底层const表明,指向的对象是常量,不可修改.
这样矛盾了.
  */

  p2 = p1;// 合法.非常量可以拷贝到常量.

//  p1 = p3;// 不合法,见 p1=p2的理由

p2 = p3;// 合法.

/*
p2拥有底层const,表明它指向了常量.本身可以是非常量指针.
p3表明它指向常量,本身是常量指针.
p2可以被修改,指向各种常量,但不能通过p2修改其指向对象的值.
p3不可以被修改.
*/
  return 0;
}
